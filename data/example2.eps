%!PS-Adobe-2.0 EPSF-2.0
%%Title: example2.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri Dec 28 10:29:37 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 356 264
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 356 50 lineto 356 264 lineto 50 264 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (example2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (okayama)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Dec 28 10:29:37 2018)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 6120.00 4284.00 BoxColFill} if
1.000 UL
LTb
1340 640 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 640 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-16)]
] -66.7 MRshow
1.000 UL
LTb
1340 829 M
31 0 V
4388 0 R
-31 0 V
1340 1018 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 1018 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-14)]
] -66.7 MRshow
1.000 UL
LTb
1340 1207 M
31 0 V
4388 0 R
-31 0 V
1340 1396 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 1396 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-12)]
] -66.7 MRshow
1.000 UL
LTb
1340 1585 M
31 0 V
4388 0 R
-31 0 V
1340 1774 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 1774 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-10)]
] -66.7 MRshow
1.000 UL
LTb
1340 1963 M
31 0 V
4388 0 R
-31 0 V
1340 2152 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 2152 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-08)]
] -66.7 MRshow
1.000 UL
LTb
1340 2342 M
31 0 V
4388 0 R
-31 0 V
1340 2531 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 2531 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1e-06)]
] -66.7 MRshow
1.000 UL
LTb
1340 2720 M
31 0 V
4388 0 R
-31 0 V
1340 2909 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 2909 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.0001)]
] -66.7 MRshow
1.000 UL
LTb
1340 3098 M
31 0 V
4388 0 R
-31 0 V
1340 3287 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 3287 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0.01)]
] -66.7 MRshow
1.000 UL
LTb
1340 3476 M
31 0 V
4388 0 R
-31 0 V
1340 3665 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 3665 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
1340 3854 M
31 0 V
4388 0 R
-31 0 V
1340 4043 M
63 0 V
4356 0 R
-63 0 V
stroke
1220 4043 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1340 640 M
0 63 V
0 3340 R
0 -63 V
stroke
1340 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1782 640 M
0 63 V
0 3340 R
0 -63 V
stroke
1782 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 20)]
] -66.7 MCshow
1.000 UL
LTb
2224 640 M
0 63 V
0 3340 R
0 -63 V
stroke
2224 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 40)]
] -66.7 MCshow
1.000 UL
LTb
2666 640 M
0 63 V
0 3340 R
0 -63 V
stroke
2666 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 60)]
] -66.7 MCshow
1.000 UL
LTb
3108 640 M
0 63 V
0 3340 R
0 -63 V
stroke
3108 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 80)]
] -66.7 MCshow
1.000 UL
LTb
3550 640 M
0 63 V
0 3340 R
0 -63 V
stroke
3550 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
3991 640 M
0 63 V
0 3340 R
0 -63 V
stroke
3991 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 120)]
] -66.7 MCshow
1.000 UL
LTb
4433 640 M
0 63 V
0 3340 R
0 -63 V
stroke
4433 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 140)]
] -66.7 MCshow
1.000 UL
LTb
4875 640 M
0 63 V
0 3340 R
0 -63 V
stroke
4875 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 160)]
] -66.7 MCshow
1.000 UL
LTb
5317 640 M
0 63 V
0 3340 R
0 -63 V
stroke
5317 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 180)]
] -66.7 MCshow
1.000 UL
LTb
5759 640 M
0 63 V
0 3340 R
0 -63 V
stroke
5759 440 M
[ [(Times-Roman) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1340 4043 N
0 -3403 V
4419 0 V
0 3403 V
-4419 0 V
Z stroke
LCb setrgbcolor
160 2341 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 250.0 0.0 true true 0 (Maximum Error)]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
3549 140 M
[ [(Times-Italic) 250.0 0.0 true true 0 (n)]
] -83.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
LCb setrgbcolor
4856 3862 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Observed error \(Stenger\))]
] -66.7 MRshow
LT0
4976 3862 M
543 0 V
1384 3396 M
111 -118 V
110 -94 V
111 -77 V
110 -69 V
111 -65 V
110 -58 V
111 -49 V
110 -57 V
110 -41 V
111 -44 V
110 -43 V
111 -42 V
110 -44 V
111 -39 V
110 -31 V
111 -47 V
110 -24 V
111 -35 V
110 -45 V
111 -21 V
110 -27 V
111 -31 V
110 -32 V
111 -233 V
110 -86 V
111 -39 V
110 -32 V
110 -25 V
111 -39 V
110 -6 V
111 -10 V
110 18 V
111 -10 V
110 14 V
111 -5 V
110 2 V
111 8 V
110 -37 V
111 -248 V
1384 3396 Crs
1495 3278 Crs
1605 3184 Crs
1716 3107 Crs
1826 3038 Crs
1937 2973 Crs
2047 2915 Crs
2158 2866 Crs
2268 2809 Crs
2378 2768 Crs
2489 2724 Crs
2599 2681 Crs
2710 2639 Crs
2820 2595 Crs
2931 2556 Crs
3041 2525 Crs
3152 2478 Crs
3262 2454 Crs
3373 2419 Crs
3483 2374 Crs
3594 2353 Crs
3704 2326 Crs
3815 2295 Crs
3925 2263 Crs
4036 2030 Crs
4146 1944 Crs
4257 1905 Crs
4367 1873 Crs
4477 1848 Crs
4588 1809 Crs
4698 1803 Crs
4809 1793 Crs
4919 1811 Crs
5030 1801 Crs
5140 1815 Crs
5251 1810 Crs
5361 1812 Crs
5472 1820 Crs
5582 1783 Crs
5693 1535 Crs
5247 3862 Crs
% End plot #1
% Begin plot #2
3.000 UL
LT2
LCb setrgbcolor
4856 3626 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Error bound \(Theorem 2.1\))]
] -66.7 MRshow
LT2
4976 3626 M
543 0 V
-4135 90 R
111 -108 V
110 -83 V
111 -71 V
110 -62 V
111 -57 V
110 -52 V
111 -49 V
110 -47 V
110 -43 V
111 -42 V
110 -40 V
111 -38 V
110 -37 V
111 -36 V
110 -35 V
111 -33 V
110 -33 V
111 -32 V
110 -31 V
111 -30 V
110 -29 V
111 -29 V
110 -29 V
111 -28 V
110 -27 V
111 -27 V
110 -26 V
110 -26 V
111 -25 V
110 -25 V
111 -25 V
110 -24 V
111 -24 V
110 -23 V
111 -24 V
110 -22 V
111 -23 V
110 -22 V
111 -23 V
% End plot #2
% Begin plot #3
1.000 UP
stroke
2.000 UL
LT0
LCb setrgbcolor
4856 3390 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Observed error \(New\))]
] -66.7 MRshow
LT0
4976 3390 M
543 0 V
-4135 31 R
111 -220 V
110 -128 V
111 -119 V
110 -103 V
111 -92 V
110 -74 V
111 -80 V
110 -84 V
110 -70 V
111 -61 V
110 -84 V
111 -30 V
110 -50 V
111 -61 V
110 -58 V
111 -44 V
110 -45 V
111 -46 V
110 -49 V
111 -52 V
110 -41 V
111 -41 V
110 -49 V
111 -45 V
110 -39 V
111 -38 V
110 -38 V
110 -38 V
111 -38 V
110 -38 V
111 -38 V
110 -33 V
111 -35 V
110 -35 V
111 -33 V
110 -34 V
111 -37 V
110 -37 V
111 -39 V
1384 3421 Box
1495 3201 Box
1605 3073 Box
1716 2954 Box
1826 2851 Box
1937 2759 Box
2047 2685 Box
2158 2605 Box
2268 2521 Box
2378 2451 Box
2489 2390 Box
2599 2306 Box
2710 2276 Box
2820 2226 Box
2931 2165 Box
3041 2107 Box
3152 2063 Box
3262 2018 Box
3373 1972 Box
3483 1923 Box
3594 1871 Box
3704 1830 Box
3815 1789 Box
3925 1740 Box
4036 1695 Box
4146 1656 Box
4257 1618 Box
4367 1580 Box
4477 1542 Box
4588 1504 Box
4698 1466 Box
4809 1428 Box
4919 1395 Box
5030 1360 Box
5140 1325 Box
5251 1292 Box
5361 1258 Box
5472 1221 Box
5582 1184 Box
5693 1145 Box
5247 3390 Box
% End plot #3
% Begin plot #4
3.000 UL
LT4
LCb setrgbcolor
4856 3154 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Error bound \(Theorem 2.2\))]
] -66.7 MRshow
LT4
4976 3154 M
543 0 V
1384 3890 M
111 -168 V
110 -124 V
111 -103 V
110 -90 V
111 -82 V
110 -75 V
111 -70 V
110 -66 V
110 -62 V
111 -59 V
110 -57 V
111 -54 V
110 -53 V
111 -50 V
110 -49 V
111 -47 V
110 -46 V
111 -45 V
110 -44 V
111 -42 V
110 -42 V
111 -41 V
110 -40 V
111 -39 V
110 -38 V
111 -38 V
110 -36 V
110 -37 V
111 -35 V
110 -35 V
111 -35 V
110 -34 V
111 -33 V
110 -33 V
111 -33 V
110 -32 V
111 -32 V
110 -31 V
111 -31 V
% End plot #4
stroke
1.000 UL
LTb
1340 4043 N
0 -3403 V
4419 0 V
0 3403 V
-4419 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic Times-Roman
